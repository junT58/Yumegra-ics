(function () { let e = function () { if (!location.href.match(/http[s]*:\/\/(www.)*yumenographia.com\//)) return void alert("ユメグラホームページで実行してください"); if (0 != document.querySelectorAll(".button-list-item__button").length) return void alert("ログインされていません。\nログイン後に実行してください"); if (!location.href.match(/http[s]*:\/\/(www.)*yumenographia.com\/mypage\/tickets[\/]/)) return void (confirm("所持チケットページで実行する必要があります。\nページヘ移動しますか？\n(※ページ移動後に再度実行してください)") && (location.href = "https://www.yumenographia.com/mypage/tickets/")); const e = window.prompt("出力モードを入力してください。\nall = 所有チケットすべて, diff = まだ出力していないチケット, last = 前回の結果も含めたチケット", "diff"); if (null == e) return; const t = window.prompt("予定タイトルの形式を入力してください。\n以下の値が使用できます。\n%name% = キャスト名, %date% = 日付, %start% = 開始時刻, %end% = 終了時刻", "ユメノグラフィア %name%"); if (null == t) return; let n = window.prompt("タイムゾーンを入力してください。", "Asia/Tokyo"); null == n && (n = "Asia/Tokyo"), null == localStorage.getItem("yg_export") && localStorage.setItem("yg_export", JSON.stringify({ last_exported: [], exported: [] })); const a = JSON.parse(localStorage.getItem("yg_export")), r = [], l = []; let s = "BEGIN:VCALENDAR\nVERSION:2.0\nPRODID:-//COMPANY///Yumegra Ticket Calendar//JP\n"; if (Array.prototype.forEach.call(document.getElementsByClassName("ticket-mypage"), function (o) { const i = o.getElementsByClassName("ticket-mypage-inner-texts"); if (i.length <= 0) return void alert("チケット情報が取得できませんでした。"); const c = i.item(0), m = c.getElementsByClassName("ticket-mypage-inner-texts__date").item(0).innerText.split("."), p = [c.getElementsByClassName("ticket-mypage-inner-texts__start").item(0).innerText, c.getElementsByClassName("ticket-mypage-inner-texts__end").item(0).innerText]; var d = new Date(parseInt(m[0]), parseInt(m[1]) - 1, parseInt(m[2]) + (parseInt(p[0].split(":")[0]) > parseInt(p[1].split(":")[0]) ? 1 : 0)); const g = `${d.getFullYear()}${("0" + (1 + d.getMonth())).slice(-2)}${("0" + d.getDate()).slice(-2)}`, u = `${c.getElementsByClassName("ticket-mypage-inner-texts__name-en").item(0).innerText}${m}${p[0]}`.replace(/[\s,\.,:]/g, "").toUpperCase(); l.push(u); let y = t.replace(/%name%/g, c.getElementsByClassName("ticket-mypage-inner-texts__name").item(0).innerText).replace(/%date%/g, `${m[0]}/${m[1]}/${m[2]}`).replace(/%start%/g, p[0]).replace(/%end%/g, p[1]), E = `BEGIN:VEVENT\nDTSTART;TZID=${n}:${m[0]}${m[1]}${m[2]}T${p[0].replace(":", "")}00\nDTEND;TZID=${n}:${g}T${p[1].replace(":", "")}00\nSUMMARY:${y}\nBEGIN:VALARM\nACTION:DISPLAY\nTRIGGER:-P15M\nDESCRIPTION:15分後にチケットがあります。\nEND:VALARM\nBEGIN:VALARM\nACTION:DISPLAY\nTRIGGER:-P30M\nDESCRIPTION:30分後にチケットがあります。\nEND:VALARM\nUID:${u}\nEND:VEVENT\n`; "diff" == e ? a.exported.includes(u) || (s += E, r.push(u)) : "last" == e && a.exported.includes(u) && !a.last_exported.includes(u) || (s += E, r.push(u)) }), !(r.length <= 0)) return a.last_exported = r, a.exported = l, localStorage.setItem("yg_export", JSON.stringify(a)), s += "END:VCALENDAR"; alert("条件と一致するチケットがありませんでした。") }(); null != e && function (...e) { return new Promise(t => { const n = new FileReader; n.onload = (() => { const e = n.result.indexOf(",") + 1; t(n.result.slice(e)) }), n.readAsDataURL(new Blob(e)) }) }(e).then(e => { const t = document.createElement("a"); t.href = "data:text/calendar;base64;charset=utf8," + e, t.download = "calendar.ics", document.body.appendChild(t), t.click(), document.body.removeChild(t) }) })();